<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="teamProject.food114.mapper.ReviewMapper">
	<!-- 가게 리뷰 검색 -->
	<select id="selectReviewList" parameterType="hashmap" resultType="teamProject.food114.model.Review">
		SELECT 
			R.*, M.*,
			DATE_FORMAT(O.ORDERDATE, '%y-%m-%d') AS orderDate, 
			CONCAT(P.FILEPATH,P.FILENAME) AS PATH
		FROM FOOD114_REVIEW R
		INNER JOIN FOOD114_ORDER_DETAIL D ON R.ORDERNO = D.ORDERNO
		INNER JOIN FOOD114_ORDERS O ON O.ORDERNO = D.ORDERNO
		INNER JOIN FOOD114_MENU M ON D.MENUNO = M.MENUNO
		LEFT JOIN FOOD114_REVIEW_PHOTO P ON R.REVIEWNO = P.REVIEWNO
		WHERE M.BIZID = #{bizId}
	</select>
	
	<!-- 리뷰 정보 -->
	<select id="selectBizReviewList" parameterType="hashmap" resultType="teamProject.food114.model.Review">
		SELECT R.REVIEWNO, R.P_REVIEWNO, O.USERID, R.RAITING, P.FILENAME, R.CONTENTS, R.ORDERNO, GROUP_CONCAT(CONCAT(M.MENU, '(', D.COUNT, ')') SEPARATOR ', ') AS MENULIST, O.ORDERDATE, R2.CONTENTS AS PCONTENTS, R2.REVIEWNO AS PNO
			FROM FOOD114_REVIEW R
			INNER JOIN FOOD114_ORDERS O ON R.ORDERNO = O.ORDERNO
			INNER JOIN FOOD114_ORDER_DETAIL D ON O.ORDERNO = D.ORDERNO
			INNER JOIN FOOD114_MENU M ON D.MENUNO = M.MENUNO
			LEFT JOIN FOOD114_REVIEW_PHOTO P ON R.REVIEWNO = P.REVIEWNO
			LEFT JOIN FOOD114_REVIEW R2 ON R.REVIEWNO = R2.P_REVIEWNO WHERE R.P_REVIEWNO IS NULL
			GROUP BY R.REVIEWNO, R.P_REVIEWNO, O.USERID, R.RAITING, P.FILENAME, R.CONTENTS, R.ORDERNO, O.ORDERDATE, O.BIZID
			HAVING O.BIZID = #{bizId} AND R.P_REVIEWNO IS NULL
	</select>
	
	<!-- 리뷰 정보 자세히 -->
	<select id="selectBizReviewInfo" parameterType="hashmap" resultType="teamProject.food114.model.Review">
		SELECT R.REVIEWNO, O.USERID, R.RAITING, P.FILENAME, R.CONTENTS, R.ORDERNO, GROUP_CONCAT(CONCAT(M.MENU, '(', D.COUNT, ')') SEPARATOR ', ') AS MENULIST, O.ORDERDATE, R2.CONTENTS AS PCONTENTS, R2.REVIEWNO AS PNO
		FROM FOOD114_REVIEW R
		INNER JOIN FOOD114_ORDERS O ON R.ORDERNO = O.ORDERNO
		INNER JOIN FOOD114_ORDER_DETAIL D ON O.ORDERNO = D.ORDERNO
		INNER JOIN FOOD114_MENU M ON D.MENUNO = M.MENUNO
		LEFT JOIN FOOD114_REVIEW_PHOTO P ON R.REVIEWNO = P.REVIEWNO
		LEFT JOIN FOOD114_REVIEW R2 ON R.REVIEWNO = R2.P_REVIEWNO WHERE R.P_REVIEWNO IS NULL
		GROUP BY R.REVIEWNO, O.USERID, R.RAITING, P.FILENAME, R.CONTENTS, R.ORDERNO, O.ORDERDATE
		HAVING R.REVIEWNO = #{reviewNo}
	</select>
	

	<insert id="insertPreview" parameterType="hashmap">
		INSERT INTO FOOD114_REVIEW VALUES(NULL,#{orderNo},#{bizId},null,#{contents},NOW(),#{reviewNo})
	</insert>
	
	<update id="updatePreview" parameterType="hashmap">
		UPDATE FOOD114_REVIEW SET CONTENTS = #{contents} WHERE REVIEWNO = #{reviewNo}
	</update>

	<!-- 리뷰 내용 검색  -->
	<select id="selectReviewInfo" parameterType="hashmap" resultType="teamProject.food114.model.Review">
		SELECT 
			MENULIST, O.BIZID, O.ORDERNO, 
			R.USERID, R.RAITING AS RAITING , R.CONTENTS AS USERREVIEW, DATE_FORMAT(R.CDATETIME,'%y/%m/%d') AS USERREVIEWDATE, 
			V.CONTENTS AS SHOPCMT, DATE_FORMAT(V.CDATETIME, '%y/%m/%d') AS SHOPCMTDATE,
	      	CONCAT(P.FILEPATH,P.FILENAME) AS PATH
   		FROM (SELECT * FROM FOOD114_REVIEW WHERE P_REVIEWNO IS NULL) R
   		LEFT JOIN FOOD114_REVIEW V ON R.REVIEWNO = V.P_REVIEWNO
   		LEFT JOIN FOOD114_REVIEW_PHOTO P ON R.REVIEWNO = P.REVIEWNO
   		INNER JOIN FOOD114_ORDERS O ON R.ORDERNO = O.ORDERNO
  		INNER JOIN (
			SELECT D.ORDERNO,GROUP_CONCAT(MENU) AS MENULIST
			FROM FOOD114_ORDER_DETAIL D
   			INNER JOIN FOOD114_MENU M ON D.MENUNO = M.MENUNO
			GROUP BY D.ORDERNO) M ON R.ORDERNO = M.ORDERNO
   		WHERE O.BIZID = #{bizId}
   		ORDER BY R.CDATETIME DESC
	</select>

</mapper>